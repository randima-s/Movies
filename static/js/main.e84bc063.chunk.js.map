{"version":3,"sources":["firebase/firebase.js","firebase/config.js","redux/ActionTypes.js","firebase/fireStore.js","requests/API_key.js","redux/ActionCreators.js","requests/getMostPopular.js","requests/searchMovies.js","redux/ConfigureStore.js","redux/reducerUser.js","redux/reducerMovies.js","redux/reducerPopular.js","redux/reducerResults.js","firebase/firebaseAuth.js","components/NavBarCMP.js","components/SearchCMP.js","components/MovieDetailsCMP.js","requests/getMovieDetails.js","components/ResultGridCMP.js","components/PopularMoviesCMP.js","components/HomePageCMP.js","components/ResultsCMP.js","components/MyMoviesCMP.js","components/LogInCMP.js","components/NewUserCMP.js","components/LoginModal.js","components/MainCMP.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","apps","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","fireStore","firestore","auth","UPDATE_USER","MOVIE_LOADING","MOVIE_LOAD","MOVIE_ADD","MOVIE_ERROR","MOVIE_REMOVE","MOVIE_UPDATE","POPULAR_LOADING","POPULAR_LOAD","POPULAR_ERROR","RESULTS_LOADING","RESULTS_LOAD","RESULTS_ERROR","addData","collection","data","Promise","resolve","reject","createdAt","Timestamp","fromDate","Date","add","then","docRef","id","catch","error","API_key","updateUser","user","type","ActionTypes","payload","fetchMovies","userID","dispatch","loadingMovies","get","querySnapshot","forEach","query","push","firestoreID","movies","loadMovies","console","log","errorMovies","fetchPopular","loadingPopular","fetch","response","json","errorMessage","loadPopular","items","errorPopular","searchMoviesAction","title","movieName","loadingResults","results","loadResults","errorResults","store","createStore","combineReducers","state","isLoggedIn","action","isLoading","concat","filter","movie","map","rating","newRating","popular","applyMiddleware","thunk","logger","signOut","code","message","onAuthStateChanged","uid","NavBarCMP","props","className","to","displayName","onClick","style","cursor","toggleModal","SearchCMP","useState","setError","useRef","placeholder","ref","current","value","handleSearch","MovieDetailsCMP","details","resultsState","setResultsState","useEffect","movieID","getDetails","getMovieDetails","movieDetails","addToCollection","newItem","resultType","image","description","fullTitle","docRefId","addMovie","removeFromCollection","doc","delete","removeMovie","actors","actorList","actor","src","alt","name","asCharacter","genres","genreList","genre","key","handleClose","color","awards","width","height","viewBox","fill","xmlns","d","stroke","contentRating","imDbRating","plot","releaseDate","runtimeStr","directors","writers","stars","boxOffice","budget","openingWeekendUSA","grossUSA","cumulativeWorldwideGross","ResultGridCMP","selectedMovie","setSelectedMovie","currentPage","setCurrentPage","pageCount","setPageCount","displayedResults","setDisplayedResults","Math","ceil","slice","displayedResults_","find","userMovie","paginationPages","paginationArr","Array","i","incPage","decPage","result","updateMovie","href","aria-label","aria-hidden","PopularMoviesCMP","HomePageCMP","history","useHistory","popularMoviesRef","scrollIntoView","behaviour","ResultsCMP","MyMoviesCMP","LogInCMP","userEmail","setUserEmail","userEmailError","setUserEmailError","passWord","setPassWord","passWordError","setPassWordError","loginError","setLoginError","regexEmailPattern","handleChange","event","target","test","onSubmit","email","password","signInWithEmailAndPassword","userCredentials","modalHide","preventDefault","onChange","disabled","changeState","NewUserCMP","userName","setUserName","userNameError","setUserNameError","passWordVerify","setPassWordVerify","passWordErrorVerify","setPassWordErrorVerify","accountError","setAccountError","createUserWithEmailAndPassword","currentUser","updateProfile","LoginModal","setState","Modal","show","onHide","animation","scrollable","Body","MainCMP","setSearchName","searchName","modalShow","document","this","exact","path","component","match","params","Component","withRouter","connect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e84bc063.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\n//import \"firebase/storage\";\r\nimport \"firebase/analytics\";\r\nimport \"firebase/auth\";\r\n\r\nimport { firebaseConfig } from \"./config\";\r\n\r\nif(!firebase.apps.length){\r\n    firebase.initializeApp(firebaseConfig);\r\n}\r\nelse{\r\n    firebase.app();\r\n}\r\n\r\nexport const fireStore = firebase.firestore();\r\n//export const storage=firebase.storage();\r\nexport const auth=firebase.auth();\r\nexport const timeStamp=()=>firebase.firestore.Timestamp.fromDate(new Date());","// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nexport const firebaseConfig = {\r\n    apiKey: \"AIzaSyCojwpSJpdp7bPZnR34ZptAvUwjnc-6_as\",\r\n    authDomain: \"movies-directory.firebaseapp.com\",\r\n    projectId: \"movies-directory\",\r\n    storageBucket: \"movies-directory.appspot.com\",\r\n    messagingSenderId: \"616034165856\",\r\n    appId: \"1:616034165856:web:d558ee4000bfef770d8f05\",\r\n    measurementId: \"G-GQD494H3W0\"\r\n  };","export const UPDATE_USER=\"UPDATE_USER\";\r\nexport const MOVIE_LOADING=\"MOVIE_LOADING\";\r\nexport const MOVIE_LOAD=\"MOVIE_LOAD\";\r\nexport const MOVIE_ADD=\"MOVIE_ADD\";\r\nexport const MOVIE_ERROR=\"MOVIE_ERROR\";\r\nexport const MOVIE_REMOVE=\"MOVIE_REMOVE\";\r\nexport const MOVIE_UPDATE=\"MOVIE_UPDATE\";\r\nexport const POPULAR_LOADING=\"POPULAR_LOADING\";\r\nexport const POPULAR_LOAD=\"POPULAR_LOAD\";\r\nexport const POPULAR_ERROR=\"POPULAR_ERROR\";\r\nexport const RESULTS_LOADING=\"RESULTS_LOADING\";\r\nexport const RESULTS_LOAD=\"RESULTS_LOAD\";\r\nexport const RESULTS_ERROR=\"RESULTS_ERROR\";","import {fireStore} from \"./firebase\";\r\nimport {timeStamp} from \"./firebase\";\r\n\r\nexport const addData=(collection,data)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        data.createdAt=timeStamp();\r\n        fireStore.collection(collection).add(data)\r\n        .then((docRef)=>{\r\n            resolve(docRef.id);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\nexport const deleteData=(collection,id)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fireStore.collection(collection).doc(id).delete()\r\n        .then(()=>{\r\n            resolve(true);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\nexport const updateRating=(collection,id,rating)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fireStore.collection(collection).doc(id).update({rating:rating})\r\n        .then(()=>{\r\n            resolve(true);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}\r\n\r\nexport const readData=(collection)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        fireStore.collection(collection).get()\r\n        .then((querySnapshot)=>{\r\n            const data=[];\r\n            querySnapshot.forEach((query)=>{\r\n                data.push({\r\n                    ...query.data(),\r\n                    firestoreID:query.id\r\n                });\r\n            })\r\n            resolve(data);\r\n            //resolve(docRef.id);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n}","export const API_key=\"k_4quk8cra\";","import * as ActionTypes from \"./ActionTypes\";\r\nimport {readData} from \"../firebase/fireStore\";\r\nimport {getMostPopular} from \"../requests/getMostPopular\";\r\nimport {searchMovies} from \"../requests/searchMovies\";\r\n\r\n/////////User\r\nexport const updateUser=(user)=>{\r\n    return({\r\n        type:ActionTypes.UPDATE_USER,\r\n        payload:user\r\n    });\r\n}\r\n\r\n/////////Movies\r\nexport const fetchMovies=(userID)=>dispatch=>{\r\n    dispatch(loadingMovies());\r\n    readData(userID)\r\n    .then((movies)=>{\r\n        dispatch(loadMovies(movies))\r\n    })\r\n    .catch(error=>{\r\n        console.log(\"Error: \"+error);\r\n        dispatch(errorMovies(error));\r\n    });\r\n}\r\n\r\nexport const loadingMovies=()=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_LOADING,\r\n    });\r\n}\r\n\r\nexport const loadMovies=(movies)=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_LOAD,\r\n        payload:movies\r\n    });\r\n}\r\n\r\nexport const addMovie=(movie)=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_ADD,\r\n        payload:movie\r\n    });\r\n}\r\n\r\nexport const removeMovie=(firestoreID)=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_REMOVE,\r\n        payload:firestoreID\r\n    });\r\n}\r\n\r\nexport const updateMovie=(firestoreID,newRating)=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_UPDATE,\r\n        payload:{firestoreID,newRating}\r\n    });\r\n}\r\n\r\nexport const errorMovies=(error)=>{\r\n    return({\r\n        type:ActionTypes.MOVIE_ERROR,\r\n        payload:error\r\n    });\r\n}\r\n\r\n//////////////Popular\r\nexport const fetchPopular=()=>dispatch=>{\r\n    //const blogs=[];\r\n    dispatch(loadingPopular());\r\n    getMostPopular()\r\n    .then((movies)=>{\r\n        dispatch(loadPopular(movies.items))\r\n    })\r\n    .catch(error=>{\r\n        console.log(\"Error: \"+error);\r\n        dispatch(errorPopular(error));\r\n    });\r\n}\r\n\r\nexport const loadingPopular=()=>{\r\n    return({\r\n        type:ActionTypes.POPULAR_LOADING,\r\n    });\r\n}\r\n\r\nexport const loadPopular=(movies)=>{\r\n    return({\r\n        type:ActionTypes.POPULAR_LOAD,\r\n        payload:movies\r\n    });\r\n}\r\n\r\nexport const errorPopular=(error)=>{\r\n    return({\r\n        type:ActionTypes.POPULAR_ERROR,\r\n        payload:error\r\n    });\r\n}\r\n\r\n//////////////Results\r\nexport const searchMoviesAction=(title)=>dispatch=>{\r\n    //const blogs=[];\r\n    dispatch(loadingResults());\r\n    searchMovies()\r\n    .then((results)=>{\r\n        dispatch(loadResults(results.results));\r\n    })\r\n    .catch(error=>{\r\n        console.log(\"Error: \"+error);\r\n        dispatch(errorResults(error));\r\n    });\r\n}\r\n\r\nexport const loadingResults=()=>{\r\n    return({\r\n        type:ActionTypes.RESULTS_LOADING,\r\n    });\r\n}\r\n\r\nexport const loadResults=(results)=>{\r\n    return({\r\n        type:ActionTypes.RESULTS_LOAD,\r\n        payload:results\r\n    });\r\n}\r\n\r\nexport const errorResults=(error)=>{\r\n    return({\r\n        type:ActionTypes.RESULTS_ERROR,\r\n        payload:error\r\n    });\r\n}","import {popular} from \"../sampleData/popular\"\r\nimport { API_key } from \"./API_key\";\r\n\r\nexport const getMostPopular=function(){\r\n    console.log(\"API_REQUEST\");\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(\"https://imdb-api.com/en/API/MostPopularMovies/\"+API_key)\r\n        .then((response)=>{\r\n            console.log(response)\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n            console.log(data)\r\n            if(data.errorMessage){\r\n                reject(data.errorMessage);\r\n            }\r\n            else{\r\n                resolve(data);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n    return new Promise((resolve,reject)=>{\r\n        setTimeout(()=> resolve(popular),400);\r\n    }\r\n    );\r\n}","import {sampleResult} from \"../sampleData/inception\"\r\nimport { API_key } from \"./API_key\";\r\n\r\nexport const searchMovies=function(movieName){\r\n    console.log(\"API_REQUEST\");\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(\"https://imdb-api.com/en/API/Search/\"+API_key+\"/\"+movieName)\r\n        .then((response)=>{\r\n            console.log(response)\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n            console.log(data)\r\n            if(data.errorMessage){\r\n                reject(data.errorMessage);\r\n            }\r\n            else{\r\n                resolve(data);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n    return new Promise((resolve,reject)=>{\r\n        setTimeout(()=>resolve(sampleResult),400);\r\n    });\r\n}","import {createStore,combineReducers,applyMiddleware} from \"redux\";\r\nimport thunk  from \"redux-thunk\";\r\nimport {logger} from \"redux-logger\";\r\nimport {User} from \"./reducerUser\";\r\nimport {Movies} from \"./reducerMovies\";\r\nimport { Popular } from \"./reducerPopular\";\r\nimport { Results } from \"./reducerResults\";\r\n\r\nexport const store=createStore(combineReducers({\r\n    user:User,\r\n    movies:Movies,\r\n    popular:Popular,\r\n    results:Results\r\n}),applyMiddleware(thunk,logger));","\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const User=(state={user:null,isLoggedIn:false,error:null},action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.UPDATE_USER:\r\n            return {...state,user:action.payload.user, isLoggedIn:action.payload.isLoggedIn,error:action.payload.error};\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Movies=(state={movies:[],isLoading:true,error:null},action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.MOVIE_LOADING:\r\n            return {...state,isLoading:true,error:null};\r\n        case ActionTypes.MOVIE_LOAD:\r\n            return {...state,movies:action.payload,isLoading:false,error:null}\r\n        case ActionTypes.MOVIE_ADD:\r\n            return {...state,movies:state.movies.concat( action.payload),isLoading:false,error:null}\r\n        case ActionTypes.MOVIE_ERROR:\r\n            return {...state,isLoading:false, error:action.payload};\r\n        case ActionTypes.MOVIE_REMOVE:\r\n            return {...state,movies:state.movies.filter((movie)=>movie.firestoreID!==action.payload)}\r\n        case ActionTypes.MOVIE_UPDATE:\r\n            return {...state,movies:state.movies.map((movie)=>{\r\n                if(movie.id===action.payload.firestoreID){\r\n                    return {...movie,rating:action.payload.newRating};\r\n                }\r\n                else{\r\n                    return movie;\r\n                }\r\n            })}\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Popular=(state={movies:[],isLoading:true,error:null},action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.POPULAR_LOADING:\r\n            return {...state,isLoading:true,error:null};\r\n        case ActionTypes.POPULAR_LOAD:\r\n            return {...state,movies:action.payload,isLoading:false,error:null}\r\n        case ActionTypes.POPULAR_ERROR:\r\n            return {...state,isLoading:false, error:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Results=(state={results:[],isLoading:true,error:null},action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.RESULTS_LOADING:\r\n            return {...state,isLoading:true,error:null};\r\n        case ActionTypes.RESULTS_LOAD:\r\n            return {...state,results:action.payload,isLoading:false,error:null}\r\n        case ActionTypes.RESULTS_ERROR:\r\n            return {...state,isLoading:false, error:action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {auth} from \"./firebase\";\r\nimport { updateUser,fetchMovies,loadMovies } from \"../redux/ActionCreators\";\r\nimport {store} from \"../redux/ConfigureStore\";\r\n\r\nexport const  addUser=(email,password)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        auth.createUserWithEmailAndPassword(email,password)\r\n        .then((userCredentials)=>{\r\n            resolve(\"success\");\r\n        })\r\n        .catch((error)=>{\r\n            reject(error.code+\": \"+error.message);\r\n        });\r\n    });\r\n}\r\n\r\nexport const  updateUserName=(name)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        const user =auth.currentUser;\r\n        user.updateProfile({\r\n            displayName:name\r\n        })\r\n        .then(()=>{\r\n            resolve(\"success\");\r\n        })\r\n        .catch((error)=>{\r\n            reject(error.code+\": \"+error.message);\r\n        });\r\n    });\r\n}\r\n\r\nexport const signIn=(email,password)=>{\r\n    return new Promise((resolve,reject)=>{\r\n        auth.signInWithEmailAndPassword(email,password)\r\n        .then((userCredentials)=>{\r\n            resolve(userCredentials);\r\n        })\r\n        .catch((error)=>{\r\n            reject(error.code+\": \"+error.message);\r\n        });\r\n    });\r\n}\r\n\r\nexport const signOut=()=>{\r\n    return new Promise((resolve,reject)=>{\r\n        auth.signOut()\r\n        .then(()=>{\r\n            resolve(\"Success\");\r\n        })\r\n        .catch((error)=>{\r\n            reject(error.code+\": \"+error.message);\r\n        });\r\n    });\r\n};\r\n\r\nauth.onAuthStateChanged((user)=>{\r\n    if(user){\r\n        store.dispatch(updateUser({\r\n            isLoggedIn:true,\r\n            user:user,\r\n            error:null\r\n        }));\r\n        store.dispatch(fetchMovies(user.uid));\r\n    }\r\n    else{\r\n        store.dispatch(updateUser({\r\n            isLoggedIn:false,\r\n            user:null,\r\n            error:null\r\n        }));\r\n        store.dispatch(loadMovies([]));\r\n    }\r\n});","import {Link} from \"react-router-dom\";\r\nimport {signOut} from \"../firebase/firebaseAuth\";\r\n\r\nfunction NavBarCMP(props){\r\n    return(\r\n        <div className=\"movies-nav-bar w-100\">\r\n            <nav className=\"navbar navbar-expand-lg  \">\r\n                <div >\r\n                    <Link className=\"navbar-brand nav-bar-text mx-auto \" to=\"/\">Movies Directory</Link>\r\n                    {props.user.user&&<span className=\"text-light ms-2\">{props.user.user.displayName}</span>}\r\n                    {props.user.isLoggedIn?(\r\n                        <div>\r\n                        <Link to=\"/mymovies\" className=\"navbar-link me-1 text-purple\" >My Movies</Link>\r\n                        <span className=\"text-primary\" onClick={signOut} style={{cursor:\"pointer\"}}>Log Out</span>\r\n                        </div>\r\n                    ):(\r\n                        <div>\r\n                        <span className=\"text-primary\" onClick={props.toggleModal} style={{cursor:\"pointer\"}}>Log In</span>\r\n                        </div>\r\n                    )}     \r\n                </div>\r\n            </nav>\r\n            \r\n        </div> \r\n    );\r\n}\r\n\r\nexport default NavBarCMP;\r\n","import {useRef,useState} from \"react\";\r\n\r\nfunction SearchCMP(props){\r\n    const [error,setError]=useState(false);\r\n\r\n    const movieName=useRef(null);\r\n    const handleSearch=()=>{\r\n        if(movieName.current.value){\r\n            setError(false);\r\n            props.handleSearch(movieName.current.value);\r\n        }\r\n        else{\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row  mb-2 justify-content-center  \">\r\n                <div className=\"col-md-9 mb-2 \">\r\n                <input type=\"text\" className={error?\"form-control  border-2 border-danger\":\"form-control \"} placeholder=\"Movie Name\" ref={movieName}/>\r\n                </div>\r\n                <div className=\"col-auto mb-2\">\r\n                <button type=\"submit\" className=\"btn btn-primary \" onClick={handleSearch}>Search</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchCMP;","\r\nimport {useState, useEffect } from \"react\";\r\nimport { getMovieDetails } from \"../requests/getMovieDetails\";\r\nimport {addData,deleteData,updateRating} from \"../firebase/fireStore\";\r\n\r\nconst MovieDetailsCMP =function(props){\r\n\r\n    const [resultsState,setResultsState]=useState({\r\n        isLoading:true,\r\n        details:[],\r\n        error:null\r\n    });\r\n\r\n    useEffect(()=>{\r\n        if(props.movieID){\r\n            getDetails(props.movieID);\r\n        }\r\n    },[props.movieID]);\r\n\r\n    const getDetails=(movieID)=>{\r\n        setResultsState({\r\n            isLoading:true,\r\n            details:[],\r\n            error:null\r\n        });\r\n        getMovieDetails(movieID)\r\n        .then((movieDetails)=>{\r\n            console.log(movieDetails);\r\n            setResultsState({\r\n                isLoading:false,\r\n                details:movieDetails,\r\n                error:null\r\n            });\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n            setResultsState({\r\n                isLoading:false,\r\n                details:[],\r\n                error:error\r\n            });\r\n        });\r\n    }\r\n\r\n    const addToCollection=()=>{\r\n        const newItem={\r\n            rating:1,\r\n            id:props.movieID,\r\n            resultType:\"Title\",\r\n            image:props.image,\r\n            title:props.title,\r\n            description:resultsState.details.fullTitle\r\n        };\r\n\r\n        addData(props.user.user.uid,newItem)\r\n        .then((docRefId)=>{\r\n            newItem.firestoreID=docRefId;\r\n            props.addMovie(newItem);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const removeFromCollection=()=>{\r\n        deleteData(props.user.user.uid,props.firestoreID)\r\n        .then(()=>{\r\n            props.removeMovie(props.firestoreID);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    /*const updateMovieRating=(newRating)=>{\r\n        console.log(\"not available\");\r\n        updateRating(props.user.user.uid,props.firestoreID,newRating)\r\n        .then(()=>{\r\n            console.log(\"success\");\r\n            props.updateMovie(props.firestoreID,newRating);\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n    }*/\r\n\r\n    \r\n    if(resultsState.isLoading){\r\n        return(\r\n        <div>\r\n            Loading\r\n        </div>\r\n        );\r\n    }\r\n    else if(resultsState.error){\r\n        return(\r\n            <div>\r\n                Error\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n\r\n        const actors=resultsState.details.actorList.map((actor)=>{\r\n            return(\r\n                <div className=\"col-lg-2 col-md-3 col-sm-4 col-6 p-1 cast-grid-item\" key={actor.id}>\r\n                    <img src={actor.image} alt={actor.name} className=\"w-100\"></img>\r\n                    {actor.name } as <strong>{actor.asCharacter}</strong>\r\n                </div>\r\n            );\r\n        }) ;\r\n\r\n        const genres=resultsState.details.genreList.map((genre)=>{\r\n            return(\r\n                <span key={genre.key} className=\"badge bg-purple me-1\">\r\n                    {genre.value}\r\n                </span>\r\n            );\r\n        });\r\n\r\n        return(\r\n            <div className=\"col-12 justify-content-center \" key={props.movieID+\"d\"}>\r\n                <div className=\"text-end\"><span className=\"badge bg-danger\" style={{cursor:\"pointer\"}} onClick={props.handleClose}>X</span></div>\r\n                <div className=\"movie-details\">\r\n                <h4 className=\"text-center\">{props.title}</h4>\r\n                <p className=\"text-center\">{genres}</p>\r\n                <p className=\"text-center\" style={{color:\"#EDC01F\"}}>{resultsState.details.awards}</p>\r\n\r\n                {props.user.isLoggedIn && (\r\n                    <div className=\"mx-auto mb-2\">\r\n                        \r\n                        {props.rating===0?(\r\n                            <div className=\"cursor-pointer\">\r\n                                <svg width=\"30\" height=\"32\" viewBox=\"0 0 30 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"heart-svg\"  onClick={addToCollection}>\r\n                                <path id=\"heart\" d=\"M15.6124 5.55276C8.01243 -3.24724 2.11243 2.55276 1.11243 7.55275C0.112426 12.5527 6.11243 20.0527 6.11243 20.0527L15.6124 31.0527L25.1124 20.0527C25.1124 20.0527 32 14 28.1124 5.05276C24.2249 -3.89449 15.6124 5.55276 15.6124 5.55276Z\"  stroke=\"#B10E0E\"/>\r\n                                </svg>\r\n                                <p className=\"text-center mb-0\" onClick={addToCollection}>Add to favourites</p>\r\n                            </div>\r\n                        ):(\r\n                            <div className=\"cursor-pointer\">\r\n                                <svg width=\"30\" height=\"32\" viewBox=\"0 0 30 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" className=\"heart-svg\" onClick={removeFromCollection}>\r\n                                <path id=\"heart\" d=\"M15.6124 5.55276C8.01243 -3.24724 2.11243 2.55276 1.11243 7.55275C0.112426 12.5527 6.11243 20.0527 6.11243 20.0527L15.6124 31.0527L25.1124 20.0527C25.1124 20.0527 32 14 28.1124 5.05276C24.2249 -3.89449 15.6124 5.55276 15.6124 5.55276Z\" fill=\"#CC3F3F\" stroke=\"#B10E0E\"/>\r\n                                </svg>\r\n                                <p className=\"text-center mb-0\" onClick={removeFromCollection}>Remove from favourites</p>\r\n                            </div>\r\n                        )\r\n                        }\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <img src={props.image} alt={props.title} className=\"w-100\"/>\r\n                        Rating <span className=\"badge bg-danger text-light\">{resultsState.details.contentRating} </span> \r\n                        , IMDB <span className=\"badge bg-warning text-dark\">{resultsState.details.imDbRating}</span>\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <p>{resultsState.details.plot}</p>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li><strong>Release Date :</strong> {resultsState.details.releaseDate}</li>\r\n                            <li><strong>Runtime :</strong> {resultsState.details.runtimeStr}</li>\r\n                            <li><strong>Directors:</strong> {resultsState.details.directors}</li>\r\n                            <li><strong>Writters:</strong> {resultsState.details.writers}</li>\r\n                            <li><strong>Stars:</strong> {resultsState.details.stars}</li>\r\n                        </ul>\r\n\r\n                        <div className=\"bg-primary p-2\">\r\n                            Box Office\r\n                            <table>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className=\"text-dark fw-bold\">Budget </td>\r\n                                        <td>{resultsState.details.boxOffice.budget}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-dark fw-bold\">Opening weekend USA </td>\r\n                                        <td>{resultsState.details.boxOffice.openingWeekendUSA}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-dark fw-bold\">Gross USA </td>\r\n                                        <td>{resultsState.details.boxOffice.grossUSA}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td className=\"text-dark fw-bold\">Gross Worldwide </td>\r\n                                        <td>{resultsState.details.boxOffice.cumulativeWorldwideGross}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <h4 className=\"mt-4\">Cast</h4>\r\n                    <hr/>\r\n                    {actors}\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nexport default MovieDetailsCMP;","import {sampleDetails} from \"../sampleData/details\"\r\nimport { API_key } from \"./API_key\";\r\n\r\nexport const getMovieDetails=function(movieID){\r\n    console.log(\"API_REQUEST\");\r\n    return new Promise((resolve,reject)=>{\r\n        fetch(\"https://imdb-api.com/en/API/title/\"+API_key+\"/\"+movieID)\r\n        .then((response)=>{\r\n            console.log(response)\r\n            return response.json();\r\n        })\r\n        .then((data)=>{\r\n            console.log(data)\r\n            if(data.errorMessage){\r\n                reject(data.errorMessage);\r\n            }\r\n            else{\r\n                resolve(data);\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            reject(error);\r\n        });\r\n    });\r\n    return new Promise((resolve,reject)=>{\r\n        setTimeout(()=> resolve(sampleDetails),400);\r\n    }\r\n    );\r\n}","import {useState,useEffect} from \"react\";\r\nimport MovieDetailsCMP from \"./MovieDetailsCMP\";\r\n\r\nfunction ResultGridCMP(props){\r\n\r\n    const [selectedMovie,setSelectedMovie]=useState(null);\r\n    const [currentPage,setCurrentPage]=useState(0);\r\n    const [pageCount,setPageCount]=useState(1);\r\n    const [displayedResults,setDisplayedResults]=useState([]);\r\n\r\n    useEffect(()=>{\r\n        setPageCount(Math.ceil(props.results.length/8));\r\n        setCurrentPage(1);\r\n        setDisplayedResults(props.results.slice(8*(currentPage-1),8*currentPage));\r\n    },[props.results]);\r\n\r\n    useEffect(()=>{\r\n        let displayedResults_=props.results.slice(8*(currentPage-1),8*currentPage);\r\n        if( props.user.isLoggedIn && !props.movies.error &&  props.movies.movies.length>0 && displayedResults_.length>0){\r\n            console.log(\"injecting\");\r\n            displayedResults_=displayedResults_.map((movie)=>{\r\n                return props.movies.movies.find((userMovie)=>userMovie.id===movie.id)||movie;\r\n            });\r\n            console.log(displayedResults_);\r\n        }\r\n        setDisplayedResults(displayedResults_);\r\n    },[currentPage]);\r\n\r\n    const paginationPages=(pageCount)=>{\r\n        const paginationArr=Array(pageCount);\r\n        for(let i=0;i<pageCount;i++){\r\n            paginationArr[i]=<li className=\"page-item\" key={i+1}><span className={currentPage===i+1?\"page-link pagination-custom-item-active cursor-pointer\":\"page-link pagination-custom-item cursor-pointer\"} onClick={()=>setCurrentPage(i+1)}>{i+1}</span></li>;\r\n        }\r\n        return paginationArr;\r\n    };\r\n\r\n    const incPage=()=>{\r\n        if(currentPage<pageCount){\r\n            setCurrentPage(currentPage+1);\r\n        }\r\n    }\r\n\r\n    const decPage=()=>{\r\n        if(currentPage>1){\r\n            setCurrentPage(currentPage-1);\r\n        }\r\n    }\r\n\r\n    if(props.isLoading){\r\n        return(\r\n            <div className=\"text-light\">\r\n                Loading\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.error){\r\n        return(\r\n            <div className=\"text-danger\">\r\n                error\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n\r\n        /*((searchResults)=>{\r\n            if( props.user.isLoggedIn && !props.movies.error &&  props.movies.movies.length>0){\r\n                console.log(\"injecting\");\r\n                const modifiedResults=searchResults.map((movie)=>{\r\n                    return props.movies.movies.find((userMovie)=>userMovie.id===movie.id)||movie;\r\n                });\r\n                console.log(modifiedResults);\r\n                setDisplayedResults(modifiedResults);\r\n            }\r\n        })(props.results);*/\r\n\r\n        const results=displayedResults.map((result)=>{\r\n            if(selectedMovie===result.id){\r\n                return(\r\n                    <MovieDetailsCMP movieID={result.id} title={result.title} description={result.description} image={result.image} \r\n                    firestoreID={result.firestoreID||null}\r\n                    handleClose={()=>setSelectedMovie(null)}\r\n                    user={props.user}\r\n                    addMovie={props.addMovie}\r\n                    removeMovie={props.removeMovie}\r\n                    updateMovie={props.updateMovie}\r\n                    rating={result.rating ||0}/>\r\n                );\r\n            }\r\n            else{\r\n                return(\r\n                    <div className=\"col-12 col-lg-3 co-md-4 col-sm-6 p-2 \" key={result.id} onClick={()=>setSelectedMovie(result.id)}>\r\n                        <div className=\"results-grid-item p-2\">\r\n                        <span className=\"position-relative pt-2\">\r\n                            {result.title} \r\n                            {result.rating && \r\n                            <span className=\" badge rounded-pill bg-danger ms-1\">\r\n                             Liked</span>\r\n                            }\r\n                        </span>\r\n                        <p className=\"text-secondary\">{result.description|| result.title}</p>\r\n                        <img src={result.image} alt={result.title} className=\"w-100\"/>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                );\r\n            }\r\n        });\r\n\r\n        return(\r\n            <div className=\"row\">\r\n                <nav >\r\n                    <ul className=\"pagination justify-content-center cursor-pointer\">\r\n                        <li className={currentPage===1?\"page-item disabled\":\"page-item\"}>\r\n                        <span className=\"page-link pagination-custom-item\" href=\"#\" aria-label=\"Previous\" onClick={decPage}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </span>\r\n                        </li>\r\n                        {paginationPages(pageCount)}\r\n                        <li className={currentPage===pageCount?\"page-item disabled\":\"page-item\"}>\r\n                        <span className=\"page-link bpagination-custom-item \" href=\"#\" aria-label=\"Next\" onClick={incPage}>\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </span>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                {results}\r\n                <nav >\r\n                    <ul className=\"pagination justify-content-center cursor-pointer\">\r\n                        <li className={currentPage===1?\"page-item disabled\":\"page-item\"}>\r\n                        <span className=\"page-link pagination-custom-item\" href=\"#\" aria-label=\"Previous\" onClick={decPage}>\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                        </span>\r\n                        </li>\r\n                        {paginationPages(pageCount)}\r\n                        <li className={currentPage===pageCount?\"page-item disabled\":\"page-item\"}>\r\n                        <span className=\"page-link pagination-custom-item \" href=\"#\" aria-label=\"Next\" onClick={incPage}>\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                        </span>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResultGridCMP;","import { useState,useEffect } from \"react\";\r\nimport ResultGridCMP from \"./ResultGridCMP\";\r\n\r\nfunction PopularMoviesCMP(props){\r\n    \r\n    const [modifiedResults,setModifiedResults]=useState([]);\r\n\r\n    /*useEffect(()=>{\r\n        injectUserCollectionData(props.popular.movies);\r\n    },[props.movies.movies,props.popular.movies]);*/\r\n\r\n    //should be moved to backend\r\n    /*const injectUserCollectionData=(popularMovies)=>{\r\n        if(props.user.isLoggedIn && !props.movies.isLoading && !props.movies.error){\r\n            const modifiedResults=popularMovies.map((movie)=>{\r\n                return props.movies.movies.find((userMovie)=>userMovie.id===movie.id)||movie;\r\n            });\r\n            setModifiedResults(modifiedResults);\r\n        }\r\n        else{\r\n            setModifiedResults(popularMovies);\r\n        }\r\n    }*/\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"movies-nav-filler\">\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"text-light results-grid\">\r\n                <h1 className=\"category-heading\">\r\n                Most Popular Movies\r\n                </h1>\r\n                <ResultGridCMP \r\n                    movies={props.movies}\r\n                    isLoading={props.popular.isLoading} \r\n                    error={props.popular.error} \r\n                    results={props.popular.movies} \r\n                    user={props.user}\r\n                    addMovie={props.addMovie}\r\n                    removeMovie={props.removeMovie}\r\n                    updateMovie={props.updateMovie}\r\n                />\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PopularMoviesCMP;","\r\nimport SearchCMP from \"./SearchCMP\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport PopularMoviesCMP from \"./PopularMoviesCMP\";\r\nimport { useRef } from \"react\";\r\n\r\nfunction HomePageCMP(props){\r\n\r\n    const history=useHistory();\r\n    const popularMoviesRef=useRef(null);\r\n\r\n    const handleSearch=(movieName)=>{\r\n        props.handleSearch(movieName);\r\n        history.push(\"/results\");\r\n        //history.push(\"/results\"+movieName);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"row home-search-background align-items-center \" >\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-10 col-lg-4 col-md-6 col-sm-8 text-light home-search-container\">\r\n                    <h4 className=\"text-center mx-2 mb-0\">Welocome</h4>\r\n                    <h1 className=\"text-center mx-2 main-heading\">Movies Directory</h1>\r\n                    <SearchCMP handleSearch={handleSearch}/>\r\n                    <p className=\"text-center text-purple cursor-pointer mb-0\" onClick={()=>popularMoviesRef.current.scrollIntoView({behaviour:'smooth'})}>Browse Movies</p>\r\n                    {!props.isLoggedIn && <p className=\"m-0 text-center\"><span className=\"text-primary cursor-pointer\" onClick={props.toggleModal}>Log in</span> for recommendations</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div ref={popularMoviesRef}>\r\n            <PopularMoviesCMP\r\n            popular={props.popular} \r\n            user={props.user}\r\n            movies={props.movies}\r\n            addMovie={props.addMovie}\r\n            removeMovie={props.removeMovie}\r\n            updateMovie={props.updateMovie}/>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePageCMP;","import { useState,useEffect } from \"react\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport SearchCMP from \"./SearchCMP\";\r\nimport ResultGridCMP from \"./ResultGridCMP\";\r\n\r\nfunction ResultsCMP(props){\r\n\r\n    const history=useHistory(null);\r\n\r\n    const handleSearch=(movieName)=>{\r\n        props.handleSearch(movieName);\r\n        history.push(\"/results\");\r\n        //history.push(\"/results\"+movieName);\r\n    }\r\n\r\n    //should be moved to backend\r\n    /*((searchResults)=>{\r\n        if(props.user.isLoggedIn && !props.movies.isLoading && !props.movies.error && !props.results.isLoading && props.results.results.length>0){\r\n\r\n\r\n        }\r\n    })(props.results.results);\r\n\r\n    const injectUserCollectionData=(searchResults)=>{\r\n        if(props.user.isLoggedIn && !props.movies.isLoading && !props.movies.error){\r\n            console.log(\"modifying\");\r\n            const modifiedResults=searchResults.map((movie)=>{\r\n                return props.movies.movies.find((userMovie)=>userMovie.id===movie.id)||movie;\r\n            });\r\n            console.log(modifiedResults);\r\n            return modifiedResults;\r\n        }\r\n        else{\r\n            return searchResults;\r\n        }\r\n    }*/\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"movies-nav-filler\">\r\n\r\n            </div>\r\n            <div className=\"container\">\r\n                <h2 className=\"category-heading text-center\">Search Movies</h2>\r\n                <div className=\"w-50 mx-auto\">\r\n                <SearchCMP handleSearch={handleSearch}/>\r\n                </div>\r\n                <div className=\"text-light results-grid\">\r\n                <ResultGridCMP \r\n                    movies={props.movies}    \r\n                    isLoading={props.results.isLoading} \r\n                    error={props.results.error} \r\n                    results={props.results.results} \r\n                    user={props.user}\r\n                    addMovie={props.addMovie}\r\n                    removeMovie={props.removeMovie}\r\n                    updateMovie={props.updateMovie}\r\n                />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultsCMP;","\r\nimport ResultGridCMP from \"./ResultGridCMP\";\r\n\r\nfunction MyMoviesCMP(props){\r\n\r\n    if(!props.user.isLoggedIn){\r\n        return(\r\n            <div className=\"text-light\">\r\n                Loading\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.user.error){\r\n        return(\r\n            <div>\r\n                Error\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return(\r\n            <div className=\"text-light\">\r\n            <div className=\"movies-nav-filler\">\r\n            </div>\r\n            <div className=\"container\">\r\n                <div>\r\n                    <h1 className=\"text-center\">{props.user.user.displayName}</h1>\r\n                </div>\r\n                \r\n                <div>\r\n                    <h4>My Movie Collection</h4>\r\n                    <hr/>\r\n                    <ResultGridCMP \r\n                    movies={props.movies}\r\n                    isLoading={props.movies.isLoading} \r\n                    error={props.movies.error} \r\n                    results={props.movies.movies} \r\n                    user={props.user}\r\n                    addMovie={props.addMovie}\r\n                    removeMovie={props.removeMovie}\r\n                    updateMovie={props.updateMovie}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyMoviesCMP;\r\n\r\n/*\r\n<div className=\"mb-4\">\r\n                    <h4 className=\"text-warning\">Recommendations</h4>\r\n                    <hr/>\r\n                    <div className=\"empty-box\">\r\n                        Keep adding movies to get Recommendations\r\n                    </div>\r\n                </div>\r\n                */","\r\nimport {useState} from \"react\";\r\nimport {signIn} from \"../firebase/firebaseAuth\";\r\n\r\nfunction LogInCMP(props){\r\n\r\n    const [userEmail,setUserEmail]=useState(\"abc@def.com\");\r\n    const [userEmailError,setUserEmailError]=useState(null);\r\n    const [passWord,setPassWord]=useState(\"\");\r\n    const [passWordError,setPassWordError]=useState(null);\r\n    const [loginError,setLoginError]=useState(null);\r\n    const regexEmailPattern=/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n\r\n    const handleChange=(event)=>{\r\n        const target=event.target;\r\n        switch(target.id){\r\n            case \"userEmail\":\r\n                setUserEmail(target.value);\r\n                setUserEmailError(regexEmailPattern.test(target.value) ?null:\"Invalid Email\");\r\n                break;\r\n            case \"passWord\":\r\n                setPassWord(target.value);\r\n                setPassWordError(target.value.length<8?\"Password must be at least 8 charaters long\":null);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit=(event)=>{\r\n        if(!userEmailError && !passWordError ){\r\n            signIn(userEmail,passWord)\r\n            .catch((error)=>{\r\n                setLoginError(error);\r\n            });\r\n            props.modalHide();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div  >\r\n                <div className=\"px-4 my-4\">\r\n                    <h2 className=\"text-center mb-4 text-purple\">Log In</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"userEmail\" placeholder=\"abc@def.com\" value={userEmail} onChange={handleChange}/>\r\n                            {userEmailError&& <p className=\"text-danger\">{userEmailError}</p>}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"passWord\" placeholder=\"\" value={passWord} onChange={handleChange}/>\r\n                            {passWordError&& <p className=\"text-danger\">{passWordError}</p>}\r\n                        </div>\r\n                        {loginError && <div className=\"mb-2 text-danger\">{loginError}</div>}\r\n                        <div >\r\n                            <button type=\"submit\" className=\"btn btn-primary w-100 \" disabled={userEmailError || passWordError}>Sign In</button>\r\n                        </div>\r\n                    </form>\r\n                    <hr/>\r\n                    <div>\r\n                        New User <span className=\"text-primary\" style={{cursor:\"pointer\"}} onClick={()=>props.changeState()}>Create Account</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogInCMP;","//import {baseURL} from \"../shared/baseUrl\";\r\nimport {useState} from \"react\";\r\n\r\nimport {addUser,updateUserName} from \"../firebase/firebaseAuth\";\r\n\r\nfunction NewUserCMP(props){\r\n\r\n    const [userName,setUserName]=useState(\"name\");\r\n    const [userNameError,setUserNameError]=useState(null);\r\n    const [userEmail,setUserEmail]=useState(\"abc@def.com\");\r\n    const [userEmailError,setUserEmailError]=useState(null);\r\n    const [passWord,setPassWord]=useState(\"\");\r\n    const [passWordError,setPassWordError]=useState(null);\r\n    const [passWordVerify,setPassWordVerify]=useState(\"\");\r\n    const [passWordErrorVerify,setPassWordErrorVerify]=useState(null);\r\n    const [accountError,setAccountError]=useState(null);\r\n\r\n    const regexEmailPattern=/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\r\n\r\n    const handleChange=(event)=>{\r\n        const target=event.target;\r\n        switch(target.id){\r\n            case \"userName\":\r\n                setUserName(target.value);\r\n                setUserNameError(target.value.length<4?\"Name must be at least 4 charaters long\":null);\r\n                break;\r\n            case \"userEmail\":\r\n                setUserEmail(target.value);\r\n                setUserEmailError(regexEmailPattern.test(target.value) ?null:\"Invalid Email\");\r\n                break;\r\n            case \"passWord\":\r\n                setPassWord(target.value);\r\n                setPassWordError(target.value.length<8?\"Password must be at least 8 charaters long\":null);\r\n                setPassWordErrorVerify(passWordVerify===target.value?null:\"Password should match\");\r\n                break;\r\n            case \"passWordVerify\":\r\n                setPassWordVerify(target.value);\r\n                setPassWordErrorVerify(passWord===target.value?null:\"Password should match\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit=(event)=>{\r\n        if(!userEmailError && !passWordError && !passWordErrorVerify){\r\n            addUser(userEmail,passWord)\r\n            .then(()=>{\r\n                return updateUserName(userName);\r\n            })\r\n            .then((message)=>{\r\n                console.log(message)\r\n            })\r\n            .catch((error)=>{\r\n                setAccountError(error);\r\n            });\r\n            props.modalHide();\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div>\r\n                <div className=\"px-4 my-4\">\r\n                    <h2 className=\"text-center mb-4 text-purple\">Create Account</h2>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label\">Name</label>\r\n                            <input type=\"text\" className=\"form-control\" id=\"userName\" placeholder=\"name\" value={userName} onChange={handleChange}/>\r\n                            {userNameError&& <p className=\"text-danger\">{userNameError}</p>}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label\">Email</label>\r\n                            <input type=\"email\" className=\"form-control\" id=\"userEmail\" placeholder=\"abc@def.com\" value={userEmail} onChange={handleChange}/>\r\n                            {userEmailError&& <p className=\"text-danger\">{userEmailError}</p>}\r\n                        </div>\r\n                        <div className=\"mb-2\">\r\n                            <label className=\"form-label\">Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"passWord\" placeholder=\"\" value={passWord} onChange={handleChange}/>\r\n                            {passWordError&& <p className=\"text-danger\">{passWordError}</p>}\r\n                        </div>\r\n                        <div className=\"mb-4\">\r\n                            <label className=\"form-label\">Re-enter Password</label>\r\n                            <input type=\"password\" className=\"form-control\" id=\"passWordVerify\" placeholder=\"\" value={passWordVerify} onChange={handleChange}/>\r\n                            {passWordErrorVerify && <p className=\"text-danger\">{passWordErrorVerify}</p>}\r\n                        </div>\r\n                        {accountError && <div className=\"text-danger\">{accountError}</div>}\r\n                        <div >\r\n                            <button type=\"submit\" className=\"btn btn-primary w-100 \" disabled={userEmailError || passWordError || passWordErrorVerify}>Create</button>\r\n                        </div>\r\n                        <hr/>\r\n                        <div>\r\n                            <span className=\"text-primary\" style={{cursor:\"pointer\"}} onClick={()=>props.changeState()}>Sign In</span>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewUserCMP;","import {useState} from \"react\";\r\nimport {Modal} from \"react-bootstrap\";\r\nimport LogInCMP from \"./LogInCMP\";\r\nimport NewUserCMP from \"./NewUserCMP\";\r\n\r\nfunction LoginModal(props) {\r\n    const [state,setState]=useState(\"signin\");\r\n    return (\r\n        <Modal show={props.show} onHide={props.modalHide} animation={false} scrollable={true} >\r\n        <Modal.Body className=\"m-1 p-1 modal-body text-light\">\r\n        <div className=\"container \">\r\n            {state===\"signin\"&&<LogInCMP changeState={()=>setState(\"newuser\")} updateUser={props.updateUser} modalHide={props.modalHide}/>}\r\n            {state===\"newuser\"&&<NewUserCMP changeState={()=>setState(\"signin\")} updateUser={props.updateUser} modalHide={props.modalHide}/>}\r\n        </div>\r\n        </Modal.Body>\r\n        </Modal>\r\n    );\r\n}\r\n\r\nexport default LoginModal;","import {Component} from \"react\";\r\nimport {Switch,Route,Redirect, withRouter} from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport NavBarCMP from \"./NavBarCMP\";\r\nimport HomePageCMP from \"./HomePageCMP\";\r\nimport ResultsCMP from \"./ResultsCMP\";\r\nimport MyMoviesCMP from \"./MyMoviesCMP\";\r\nimport LoginModal from \"./LoginModal\";\r\nimport { addMovie,removeMovie,updateMovie,fetchPopular,searchMoviesAction } from \"../redux/ActionCreators\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user:state.user,\r\n        movies:state.movies,\r\n        popular:state.popular,\r\n        results:state.results\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps=dispatch=>({\r\n    addMovie:(movie)=>dispatch(addMovie(movie)),\r\n    removeMovie:(firestoreID)=>dispatch(removeMovie(firestoreID)),\r\n    updateMovie:(firestoreID,newRating)=>dispatch(updateMovie(firestoreID,newRating)),\r\n    fetchPopular:()=>dispatch(fetchPopular()),\r\n    searchMoviesAction:(title)=>dispatch(searchMoviesAction(title))\r\n})\r\nclass MainCMP extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            searchName:\"\",\r\n            modalShow:false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(\"mounted\");\r\n        document.title=\"Movies Directory\"\r\n        this.props.fetchPopular();\r\n    }\r\n\r\n    setSearchName=(searchName)=>{\r\n        this.setState({searchName:searchName});\r\n    }\r\n\r\n    toggleModal=()=>{\r\n        this.setState({modalShow:!this.state.modalShow});\r\n    }\r\n\r\n    //enter to search\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <NavBarCMP user={this.props.user} toggleModal={this.toggleModal}/>\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={()=><HomePageCMP isLoggedIn={this.props.user.isLoggedIn} \r\n                        handleSearch={this.props.searchMoviesAction}\r\n                        toggleModal={this.toggleModal}\r\n                        user={this.props.user}\r\n                        addMovie={this.props.addMovie}\r\n                        removeMovie={this.props.removeMovie}\r\n                        updateMovie={this.props.updateMovie}\r\n                        movies={this.props.movies}\r\n                        popular={this.props.popular}/>}/>\r\n                    {this.props.user.isLoggedIn &&<Route path =\"/mymovies\" component={()=><MyMoviesCMP user={this.props.user} movies={this.props.movies}\r\n                        addMovie={this.props.addMovie}\r\n                        removeMovie={this.props.removeMovie}\r\n                        updateMovie={this.props.updateMovie}/>}></Route>}\r\n                    <Route  path=\"/results\" component={({match})=><ResultsCMP \r\n                        searchName={match.params.movieName} \r\n                        user={this.props.user}\r\n                        addMovie={this.props.addMovie}\r\n                        removeMovie={this.props.removeMovie}\r\n                        updateMovie={this.props.updateMovie}\r\n                        results={this.props.results}\r\n                        handleSearch={this.props.searchMoviesAction}\r\n                        movies={this.props.movies}/>}/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n                <LoginModal show={this.state.modalShow} modalHide={this.toggleModal}/>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(MainCMP));","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport MainCMP from \"./components/MainCMP\";\nimport {HashRouter} from \"react-router-dom\";\nimport {store} from \"./redux/ConfigureStore\";\nimport {Provider} from \"react-redux\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n      <HashRouter>\n        <MainCMP/>\n      </HashRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}